version: '3.2'
services:

  nginx:
    image: nginx
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginx-conf:/etc/nginx/conf.d
      - nginx-vhost:/etc/nginx/vhost.d
      - letsencrypt-challenges:/usr/share/nginx/html
      - letsencrypt-certs:/etc/nginx/certs:ro
    labels:
        com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"

  nginx-gen:
    image: jwilder/docker-gen
    command: -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    container_name: nginx-gen
    restart: unless-stopped
    volumes:
      - nginx-conf:/etc/nginx/conf.d
      - nginx-vhost:/etc/nginx/vhost.d
      - letsencrypt-challenges:/usr/share/nginx/html
      - letsencrypt-certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - letsencrypt-templates:/etc/docker-gen/templates:ro

  nginx-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-letsencrypt
    restart: unless-stopped
    volumes:
      - nginx-conf:/etc/nginx/conf.d
      - nginx-vhost:/etc/nginx/vhost.d
      - letsencrypt-challenges:/usr/share/nginx/html
      - letsencrypt-certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      NGINX_DOCKER_GEN_CONTAINER: "nginx-gen"
      NGINX_PROXY_CONTAINER: "nginx"
    
  db:
    container_name: limbus-db
    image: postgres:10
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data

  web:
    build:
      context: ./services/web
      dockerfile: Dockerfile.production
    expose:
      - "5000"
    volumes:
      - ./services/web/:/limbus/
      - nginx-conf:/etc/nginx/conf.d
    env_file: .env
    depends_on: 
      - db
    command: venv/bin/gunicorn --bind 0.0.0.0:5000 run:app


volumes:
  nginx-conf:
  nginx-vhost:
  letsencrypt-certs:
  letsencrypt-templates:
  letsencrypt-challenges:
  postgres_data:

networks:
  default:
    external:
      name: nginx-proxy
